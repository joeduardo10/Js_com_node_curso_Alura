const fs = require('fs');

const caminhoArquivo = process.argv;
const link = caminhoArquivo[2];

fs.readFile(link, 'utf-8', (erro, texto)=>{
    quebraEmParagrafos(texto);
    // verificaPalavrasDuplicadas(texto);
});

//criar um aray de palavras
//contar as ocorencias
//montar um objeto com o resultado
// {
//     "web": 5,
//     "computador":4
// }

//            ALTERNATIVA .flatMap 

// function quebraEmParagrafos(texto) {
//     const paragrafos = texto.toLowerCase().split('\n');
//     const contagem = paragrafos.flatMap((paragrafo) => {
//         if(!paragrafo) return []
//         return verificaPalavrasDuplicadas(paragrafo)

//     })
//     console.log(contagem);
    
// }

//            ALTERNATIVA .REDUCE()
function quebraEmParagrafos(texto) {
    const paragrafos = texto.toLowerCase().split('\n');
    const contagem = paragrafos.reduce((acum, paragrafo) => {
        if (paragrafo) {
            return [...acum, paragrafo];
        }
        return acum;
    }, [])
    console.log(contagem);

}

  
function limpaPalavras(palavra){
    return palavra.replace(/[.,\/#!$%\^&\*;:{}=\-_`~()]/g, '');
}
function verificaPalavrasDuplicadas(texto){
const listaPalavras = texto.split(' ');
//objeto[propriedade]=valor;
const resultado = {};
listaPalavras.forEach(palavra => {
    if(palavra.length >= 3){
        const palavraLimpa = limpaPalavras(palavra);
        resultado[palavra] = (resultado[palavra] || 0)+1
    }
    
});
return resultado;

}